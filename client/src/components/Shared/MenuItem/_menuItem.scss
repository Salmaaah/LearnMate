@use '../../../styles/util' as u;
@use '../../../styles/globals' as g;

.hidden {
  display: none;
  animation: fade-out 300ms;
}

.visible {
  display: flex; // this is a temporary fix for the span issue (span's display doesn't gets overwritten by hidden class so it stays visible, that's why I commented out the span's display and palced it here instead)
  animation: fade-in 300ms;
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

// &::before {
//   content: '';
//   position: absolute;
//   top: 15%;
//   left: u.rem(1);
//   height: 70%;
//   width: u.rem(3);
//   background-color: var(--P300);
// }

.menuItem {
  position: relative;
  border-radius: u.rem(10);
  display: flex;
  flex-direction: column;
  padding: u.rem(10) u.rem(15);
  cursor: pointer;
  transition: color, background-color 100ms ease-in-out;

  &:hover,
  &.sub1 {
    background-color: var(--M50);

    // Using specific selectors so that submenu items do not get highlighted

    > a > svg > path,
    > a > span > svg > path {
      stroke: var(--P300);
    }

    > a > span > div {
      color: var(--P300);
    }
  }

  // Submenu type 1 styles
  &.sub1 {
    display: block;
    > a {
      padding-bottom: u.rem(10);

      span > svg {
        transform: rotate(90deg);
        transition: transform 500ms ease-out;
      }
    }

    ul {
      display: flex;
      flex-direction: column;
      padding-left: u.rem(7);

      div {
        font-size: u.rem(14.5);
      }

      a > svg {
        width: u.rem(16.5);
        height: auto;
      }
    }
  }

  // Submenu type 2 styles, this type seperates the styling of the submenu from the menu title, hence the need for the > ul selector
  &.sub2 > ul {
    display: block;
    position: absolute;
    width: u.rem(173);
    background-color: var(--D500);
    border: u.rem(1.5) solid var(--M50);
    border-radius: u.rem(10);
    padding: u.rem(16);
    overflow: hidden;

    svg {
      width: u.rem(16.5);
      height: auto;

      > path {
        stroke: var(--D50);
      }
    }
    span > div {
      color: var(--D50);
      font-size: u.rem(14.5);
    }
  }

  // Submenu type 2 position 1
  &.tr-tl > ul {
    top: 0;
    left: 0;
    margin-left: u.rem(65);
  }

  // Link elements (Icon, label, and more icon) styles
  &__title {
    display: flex;
    gap: u.rem(20);
    position: relative;

    // Icon styles
    svg {
      width: u.rem(18);
      height: auto;
      flex-shrink: 0;
      > path {
        stroke: var(--M400);
      }
    }

    // Label and more icon container
    span {
      width: 100%;
      // display: flex;
      justify-content: space-between;
      align-items: center;
    }

    // Label styles
    div {
      overflow: hidden;
      font-size: u.rem(16);
      color: var(--M400);
    }

    // More icon styles
    span > svg {
      height: u.rem(10);
      width: auto;
      margin-left: u.rem(20);
      transform: rotate(0deg);
      transition: transform 500ms ease-out;
    }

    // Icon, label, and more icon highlighted when to === current location
    &.active {
      // this will affect both the left icon and more icon
      svg > path {
        stroke: var(--P300);
      }

      // this will affect the left icon only
      > svg > path {
        stroke-width: 13;
      }

      // this will affect the label
      div {
        color: var(--P300);
        font-weight: 600;
      }
    }
  }

  &__submenu {
    display: none;
  }

  // Tooltip with label when hovering over iconOnly menuitems
  &__tooltip {
    z-index: 100;
    position: absolute;
    text-wrap: nowrap;
    top: 15%;
    left: 140%;
    background-color: var(--D500);
    border-radius: u.rem(5);
    padding: u.rem(5) u.rem(10);
    color: var(--D50);
    font-weight: 600;

    &::before {
      content: '';
      position: absolute;
      top: 50%;
      right: 100%;
      margin-top: u.rem(-5); /* Half of the arrow height */
      border-width: u.rem(5);
      border-style: solid;
      border-color: transparent var(--D500) transparent transparent;
    }
  }
}
