@use '../../../styles/util/' as u;

.propertySelector {
  width: 100%;
  // max-height: u.rem(225); // In combination with overflow: scroll in __dropdown to create a scrollable fixed height menu but this creates an issue with propertyMenu because it gets clipped as well, and we can't put it outside of dropdown because it takes attributes from propertySelection, we also need its position to absolute with relativity to the menu inside propertySelection!!
  // TODO: Find alternate solution that works ^^^^^^^
  display: flex;
  flex-direction: column;

  transition: all 0.2s ease-in-out;

  &__header {
    // Created a variable to be able to access this value from JavaScript
    --max-height-propertySelector__header: u.rem(70);
    max-height: var(--max-height-propertySelector__header);
    padding: u.rem(5) u.rem(15);
    display: flex;
    justify-content: space-between;
    gap: u.rem(30);

    > div {
      padding-block: u.rem(2);
      font-size: u.rem(13);
      font-weight: 600;
    }

    > ul {
      overflow-y: scroll;
      overflow-x: hidden;
      display: flex;
      justify-content: flex-end;
      flex-grow: 1;
      flex-wrap: wrap;

      > input {
        width: u.rem(90);
        padding: u.rem(3) u.rem(10);
        text-align: right;
        font-size: u.rem(13);

        background: none;
        border: none;
        outline: none;
      }
    }
  }

  &__dropdown {
    max-width: 100%;
    // overflow: scroll;
    padding-inline: u.rem(15);
    display: flex;
    flex-direction: column;
    gap: u.rem(7);

    > div {
      color: var(--D200);
      font-weight: 700;
      font-size: u.rem(12);
    }

    > ul {
      // overflow: scroll;
      display: flex;
      flex-direction: column;
      gap: u.rem(5);
      margin-bottom: u.rem(5);
    }
  }

  &.closed {
    cursor: pointer;

    * {
      cursor: pointer;
    }

    &:hover {
      z-index: 1;
      background-color: var(--M50);
      box-shadow: 0 0 u.rem(5) u.rem(2) hsla(0, 0%, 0%, 0.15);
    }
  }

  &.open {
    // background-color: var(--M50);
    box-shadow: 0 0 u.rem(5) u.rem(2) hsla(0, 0%, 0%, 0.15);

    > div:nth-of-type(1) {
      // &__header
      background-color: var(--M50);
      padding-block: u.rem(5);
      border-bottom: u.rem(1) solid var(--M75);
      margin-bottom: u.rem(5);

      > div {
        color: var(--P300);
        font-size: u.rem(14);
        font-weight: 700;
      }

      > ul {
        justify-content: start;

        input {
          cursor: text;
          text-align: left;
          flex-grow: 1;

          &::placeholder {
            opacity: 0;
          }
        }
      }
    }
  }
}
